"use strict";
var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.webpackFinal = void 0;
var node_logger_1 = require("@storybook/node-logger");
var architect_1 = require("@angular-devkit/architect");
var find_up_1 = require("find-up");
var semver_1 = __importDefault(require("@storybook/semver"));
var ts_dedent_1 = __importDefault(require("ts-dedent"));
var core_1 = require("@angular-devkit/core");
var module_is_available_1 = require("./utils/module-is-available");
var angular_cli_webpack_12_2_x_1 = require("./angular-cli-webpack-12.2.x");
var angular_cli_webpack_13_x_x_1 = require("./angular-cli-webpack-13.x.x");
var angular_cli_webpack_older_1 = require("./angular-cli-webpack-older");
var angular_read_workspace_1 = require("./angular-read-workspace");
function webpackFinal(baseConfig, options) {
    return __awaiter(this, void 0, void 0, function () {
        var angularCliVersion, webpackGetterByVersions, webpackGetter;
        var _this = this;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    if (!module_is_available_1.moduleIsAvailable('@angular-devkit/build-angular')) {
                        node_logger_1.logger.info('=> Using base config because "@angular-devkit/build-angular" is not installed');
                        return [2 /*return*/, baseConfig];
                    }
                    return [4 /*yield*/, Promise.resolve().then(function () { return __importStar(require('@angular/cli')); }).then(function (m) { return semver_1.default.coerce(m.VERSION.full); })];
                case 1:
                    angularCliVersion = _a.sent();
                    webpackGetterByVersions = [
                        {
                            info: '=> Loading angular-cli config for angular >= 13.0.0',
                            condition: semver_1.default.satisfies(angularCliVersion, '>=13.0.0'),
                            getWebpackConfig: function (_baseConfig, _options) { return __awaiter(_this, void 0, void 0, function () {
                                var builderContext, builderOptions, legacyDefaultOptions;
                                return __generator(this, function (_a) {
                                    switch (_a.label) {
                                        case 0:
                                            builderContext = getBuilderContext(_options);
                                            return [4 /*yield*/, getBuilderOptions(_options, builderContext)];
                                        case 1:
                                            builderOptions = _a.sent();
                                            return [4 /*yield*/, getLegacyDefaultBuildOptions(_options)];
                                        case 2:
                                            legacyDefaultOptions = _a.sent();
                                            return [2 /*return*/, angular_cli_webpack_13_x_x_1.getWebpackConfig(_baseConfig, {
                                                    builderOptions: __assign(__assign({ watch: options.configType === 'DEVELOPMENT' }, legacyDefaultOptions), builderOptions),
                                                    builderContext: builderContext,
                                                })];
                                    }
                                });
                            }); },
                        },
                        {
                            info: '=> Loading angular-cli config for angular 12.2.x',
                            condition: semver_1.default.satisfies(angularCliVersion, '12.2.x') && options.angularBuilderContext,
                            getWebpackConfig: function (_baseConfig, _options) { return __awaiter(_this, void 0, void 0, function () {
                                var builderContext, builderOptions;
                                return __generator(this, function (_a) {
                                    switch (_a.label) {
                                        case 0:
                                            builderContext = getBuilderContext(_options);
                                            return [4 /*yield*/, getBuilderOptions(_options, builderContext)];
                                        case 1:
                                            builderOptions = _a.sent();
                                            return [2 /*return*/, angular_cli_webpack_12_2_x_1.getWebpackConfig(_baseConfig, {
                                                    builderOptions: builderOptions,
                                                    builderContext: builderContext,
                                                })];
                                    }
                                });
                            }); },
                        },
                        {
                            info: '=> Loading angular-cli config for angular lower than 12.2.0',
                            condition: true,
                            getWebpackConfig: angular_cli_webpack_older_1.getWebpackConfig,
                        },
                    ];
                    webpackGetter = webpackGetterByVersions.find(function (wg) { return wg.condition; });
                    node_logger_1.logger.info(webpackGetter.info);
                    return [2 /*return*/, Promise.resolve(webpackGetter.getWebpackConfig(baseConfig, options))];
            }
        });
    });
}
exports.webpackFinal = webpackFinal;
/**
 * Get Builder Context
 * If storybook is not start by angular builder create dumb BuilderContext
 */
function getBuilderContext(options) {
    var _a;
    return ((_a = options.angularBuilderContext) !== null && _a !== void 0 ? _a : {
        target: { project: 'noop-project', builder: '', options: {} },
        workspaceRoot: process.cwd(),
        getProjectMetadata: function () { return ({}); },
        getTargetOptions: function () { return ({}); },
        logger: new core_1.logging.Logger('Storybook'),
    });
}
/**
 * Get builder options
 * Merge target options from browser target and from storybook options
 */
function getBuilderOptions(options, builderContext) {
    var _a, _b;
    return __awaiter(this, void 0, void 0, function () {
        var browserTargetOptions, browserTarget, builderOptions;
        return __generator(this, function (_c) {
            switch (_c.label) {
                case 0:
                    browserTargetOptions = {};
                    if (!options.angularBrowserTarget) return [3 /*break*/, 2];
                    browserTarget = architect_1.targetFromTargetString(options.angularBrowserTarget);
                    node_logger_1.logger.info("=> Using angular browser target options from \"" + browserTarget.project + ":" + browserTarget.target + (browserTarget.configuration ? ":" + browserTarget.configuration : '') + "\"");
                    return [4 /*yield*/, builderContext.getTargetOptions(browserTarget)];
                case 1:
                    browserTargetOptions = _c.sent();
                    _c.label = 2;
                case 2:
                    builderOptions = __assign(__assign(__assign({}, browserTargetOptions), options.angularBuilderOptions), { tsConfig: (_b = (_a = options.tsConfig) !== null && _a !== void 0 ? _a : find_up_1.sync('tsconfig.json', { cwd: options.configDir })) !== null && _b !== void 0 ? _b : browserTargetOptions.tsConfig });
                    node_logger_1.logger.info("=> Using angular project with \"tsConfig:" + builderOptions.tsConfig + "\"");
                    return [2 /*return*/, builderOptions];
            }
        });
    });
}
/**
 * Get options from legacy way
 * /!\ This is only for backward compatibility and would be removed on Storybook 7.0
 * only work for angular.json with [defaultProject].build or "storybook.build" config
 */
function getLegacyDefaultBuildOptions(options) {
    return __awaiter(this, void 0, void 0, function () {
        var dirToSearch, workspaceConfig, error_1, browserTarget, _a, target, project;
        return __generator(this, function (_b) {
            switch (_b.label) {
                case 0:
                    if (options.angularBrowserTarget !== undefined) {
                        // Not use legacy way with builder (`angularBrowserTarget` is defined or null with builder and undefined without)
                        return [2 /*return*/, {}];
                    }
                    node_logger_1.logger.warn(ts_dedent_1.default(templateObject_1 || (templateObject_1 = __makeTemplateObject(["Your Storybook startup uses a solution that will not be supported in version 7.0. \n            You must use angular builder to have an explicit configuration on the project used in angular.json\n            Read more at:\n            - https://github.com/storybookjs/storybook/blob/next/MIGRATION.md#sb-angular-builder)\n            - https://github.com/storybookjs/storybook/blob/next/MIGRATION.md#angular13)\n          "], ["Your Storybook startup uses a solution that will not be supported in version 7.0. \n            You must use angular builder to have an explicit configuration on the project used in angular.json\n            Read more at:\n            - https://github.com/storybookjs/storybook/blob/next/MIGRATION.md#sb-angular-builder)\n            - https://github.com/storybookjs/storybook/blob/next/MIGRATION.md#angular13)\n          "]))));
                    dirToSearch = process.cwd();
                    _b.label = 1;
                case 1:
                    _b.trys.push([1, 3, , 4]);
                    return [4 /*yield*/, angular_read_workspace_1.readAngularWorkspaceConfig(dirToSearch)];
                case 2:
                    workspaceConfig = _b.sent();
                    return [3 /*break*/, 4];
                case 3:
                    error_1 = _b.sent();
                    node_logger_1.logger.error("=> Could not find angular workspace config (angular.json) on this path \"" + dirToSearch + "\"");
                    node_logger_1.logger.info("=> Fail to load angular-cli config. Using base config");
                    return [2 /*return*/, {}];
                case 4:
                    // Find angular project target
                    try {
                        browserTarget = {
                            configuration: undefined,
                            project: angular_read_workspace_1.getDefaultProjectName(workspaceConfig),
                            target: 'build',
                        };
                        _a = angular_read_workspace_1.findAngularProjectTarget(workspaceConfig, browserTarget.project, browserTarget.target), target = _a.target, project = _a.project;
                        node_logger_1.logger.info("=> Using angular project \"" + browserTarget.project + ":" + browserTarget.target + "\" for configuring Storybook");
                        return [2 /*return*/, __assign({}, target.options)];
                    }
                    catch (error) {
                        node_logger_1.logger.error("=> Could not find angular project: " + error.message);
                        node_logger_1.logger.info("=> Fail to load angular-cli config. Using base config");
                        return [2 /*return*/, {}];
                    }
                    return [2 /*return*/];
            }
        });
    });
}
var templateObject_1;
